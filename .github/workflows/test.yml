name: test
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  appleos:
    strategy:
      fail-fast: false
      matrix:
        xcode:
          - latest
          - latest-stable
        destination:
          - 'platform=macOS,arch=x86_64'
          #- 'platform=macOS,arch=arm64'
          - 'platform=iOS Simulator,OS=latest,name=iPhone 11 Pro'
          - 'platform=tvOS Simulator,OS=latest,name=Apple TV 4K'
          - 'platform=watchOS Simulator,OS=latest,name=Apple Watch Series 6 - 44mm'
    runs-on: macos-11.0
    steps:
    - name: Select latest available Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ matrix.xcode }}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run tests for ${{ matrix.destination }}
      run: xcodebuild test -scheme StructuredAPIClient-Package -enableThreadSanitizer YES -destination '${{ matrix.destination }}'
  
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ver:
          - swift:5.3
          - swift:5.4
          - swift:5.5
          - swiftlang/swift:nightly-main
        os:
          - bionic
          - focal
          - amazonlinux2
    container:
      image: ${{ matrix.ver }}-${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run tests for ${{ matrix.runner }}
      run: swift test --sanitize=thread

  windows:
    runs-on: windows-latest
    steps:
      - name: Setup VS dev env
        uses: seanmiddleditch/gha-setup-vsdevenv@master
      - name: Install Swift snapshot
        run: |
          Install-Binary -Url "https://download.swift.org/swift-5.5-release/windows10/swift-5.5-RELEASE/swift-5.5-RELEASE-windows10.exe" -Name "installer.exe" -ArgumentList ("-q")
      - name: Set Environment Variables
        run: |
          echo "SDKROOT=C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "DEVELOPER_DIR=C:\Library\Developer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Adjust Paths
        run: |
          echo "C:\Library\Swift-development\bin;C:\Library\icu-67\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Library\Developer\Toolchains\unknown-Asserts-development.xctoolchain\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Install Supporting Files
        run: |
          Copy-Item "$env:SDKROOT\usr\share\ucrt.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\ucrt\module.modulemap"
          Copy-Item "$env:SDKROOT\usr\share\visualc.modulemap" -destination "$env:VCToolsInstallDir\include\module.modulemap"
          Copy-Item "$env:SDKROOT\usr\share\visualc.apinotes" -destination "$env:VCToolsInstallDir\include\visualc.apinotes"
          Copy-Item "$env:SDKROOT\usr\share\winsdk.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\um\module.modulemap"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run tests
        run: swift test
